type Query {
  checkToken: User
  findUsers: [User!]!
  findUser(id: ID): User
  publishedPosts: [Post!]!
  post(postId: ID!): Post
  postsByUser(userId: ID!): [Post!]!
}

type Mutation {
  login(email: String!, password: String!): AuthPayload
  registration(username: String!, password: String!, email: String!): AuthPayload
  createUser(username: String!): User
  createDraft(title: String!, userId: ID!): Post
  publish(postId: ID!): Post
}


type AuthPayload {
  token: String!
  username: String!
  email: String!
}

type User {
  id: ID!
  email: String!
  password: String!
  username: String!
  posts: [Post!]!
}

type Post { 
  id: ID!
  title: String!
  published: Boolean!
  author: User
}